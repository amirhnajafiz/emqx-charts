apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "emqx.fullname" . }}-replicants
  namespace: {{ .Release.Namespace }}
  labels:
    app: emqx
    app.kubernetes.io/name: {{ include "emqx.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/db_type: replicant
    helm.sh/chart: {{ include "emqx.chart" . }}
spec:
  replicas: {{ .Values.emqx.replicantsCount }}
  selector:
    matchLabels:
      app: emqx
      app.kubernetes.io/name: {{ include "emqx.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/managed-by: {{ .Release.Service }}
      app.kubernetes.io/db_type: replicant
  template:
    metadata:
      labels:
        app: emqx
        app.kubernetes.io/name: {{ include "emqx.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/db_type: replicant
      annotations:
      {{- with .Values.emqx.podAnnotations }}
          {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      volumes:
      {{- if .Values.emqx.ssl.enabled }}
      - name: ssl-cert
        secret:
          secretName: {{ include "emqx.ssl.secretName" . }}
      {{- end }}
      - name: emqx-data
        emptyDir: {}
    {{- if .Values.emqx.extraVolumes }}
      {{- toYaml .Values.emqx.extraVolumes | nindent 6 }}
    {{- end }}
      {{- if .Values.emqx.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.emqx.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.emqx.initContainers }}
      initContainers:
        {{- toYaml .Values.emqx.initContainers | nindent 8 }}
      {{- end }}
      {{- if .Values.emqx.image.pullSecrets }}
      imagePullSecrets:
        {{- range .Values.emqx.image.pullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      containers:
        - name: emqx
          image: {{ .Values.emqx.image.repository }}:{{ .Values.emqx.image.tag | default .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.emqx.image.pullPolicy }}
          {{- if .Values.emqx.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.emqx.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          ports:
          - name: mqtt
            containerPort: {{ .Values.emqx.emqxConfig.EMQX_LISTENERS__TCP__DEFAULT__BIND | default 1883 }}
          - name: mqttssl
            containerPort: {{ .Values.emqx.emqxConfig.EMQX_LISTENERS__SSL__DEFAULT__BIND | default 8883 }}
          - name: ws
            containerPort: {{ .Values.emqx.emqxConfig.EMQX_LISTENERS__WS__DEFAULT__BIND | default 8083 }}
          - name: wss
            containerPort: {{ .Values.emqx.emqxConfig.EMQX_LISTENERS__WSS__DEFAULT__BIND | default 8084 }}
          - name: dashboard
            containerPort: {{ .Values.emqx.emqxConfig.EMQX_DASHBOARD__LISTENERS__HTTP__BIND | default 18083 }}
          - name: ekka
            containerPort: 4370
          - name: genrpc-manual
            containerPort: 5369
          env:
          - name: EMQX_NODE__ROLE
            value: "replicant"
          envFrom:
            - configMapRef:
                name: {{ include "emqx.fullname" . }}-env
         {{- if .Values.emqx.envFromSecret }}
            - secretRef:
                name: {{ .Values.emqx.envFromSecret }}
         {{- end }}
          resources:
{{ toYaml .Values.emqx.resources | indent 12 }}
          volumeMounts:
          - name: emqx-data
            mountPath: "/opt/emqx/data"
          {{- if .Values.emqx.ssl.enabled }}
          - name: ssl-cert
            mountPath: /tmp/ssl
            readOnly: true
          {{- end}}
          {{ if .Values.emqx.emqxLicenseSecretName }}
          - name: emqx-license
            mountPath: "/opt/emqx/etc/emqx.lic"
            subPath: "emqx.lic"
            readOnly: true
          {{- end }}
        {{- if .Values.emqx.extraVolumeMounts }}
          {{- toYaml .Values.emqx.extraVolumeMounts | nindent 10 }}
        {{- end }}
          readinessProbe:
            httpGet:
              path: /status
              port: {{ .Values.emqx.emqxConfig.EMQX_DASHBOARD__LISTENERS__HTTP__BIND | default 18083 }}
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 30
          livenessProbe:
            httpGet:
              path: /status
              port: {{ .Values.emqx.emqxConfig.EMQX_DASHBOARD__LISTENERS__HTTP__BIND | default 18083 }}
            initialDelaySeconds: 60
            periodSeconds: 30
            failureThreshold: 10
    {{- with .Values.emqx.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.emqx.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.emqx.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.emqx.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- range . }}
        - maxSkew: {{ .maxSkew }}
          topologyKey: {{ .topologyKey }}
          whenUnsatisfiable: {{ .whenUnsatisfiable }}
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: {{ include "emqx.name" $ }}
              app.kubernetes.io/instance: {{ $.Release.Name }}
        {{- if .minDomains }}
          minDomains: {{ .minDomains }}
        {{- end }}
        {{- if .matchLabelKeys }}
          matchLabelKeys:
            {{- range .matchLabelKeys }}
            - {{ . }}
            {{- end }}
        {{- end }}
        {{- if .nodeAffinityPolicy }}
          nodeAffinityPolicy: {{ .nodeAffinityPolicy }}
        {{- end }}
        {{- if .nodeTaintsPolicy }}
          nodeTaintsPolicy: {{ .nodeTaintsPolicy }}
        {{- end }}
        {{- end }}
    {{- end }}
